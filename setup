#!/bin/sh

SETUP_RUBY_VERSION="2.0.0-p247"
SETUP_NODE_VERSION="0.10.12"

DEST=`dirname ${0}`
SCRIPT_PATH=$(cd $(dirname ${0});pwd)
cd ~
if [ ! -e ~/.zshrc ]; then
	ln -s $DEST/.zshrc ~/.zshrc
elif [ ! -L ~/.zshrc ]; then
	echo "Replace .zshrc for dotfiles"
	mv ~/.zshrc ~/.zshrc.old
	ln -s $DEST/.zshrc ~/.zshrc
fi
if [ ! -e ~/.vimrc ]; then
	ln -s $DEST/.vimrc ~/.vimrc
elif [ ! -L ~/.vimrc ]; then
	echo "Replace .vimrc for dotfiles"
	mv ~/.vimrc ~/.vimrc.old
	ln -s $DEST/.vimrc ~/.vimrc
fi
if [ ! -e ~/.gemrc ]; then
	ln -s $DEST/.gemrc ~/.gemrc
elif [ ! -L ~/.gemrc ]; then
	echo "Replace .gemrc for dotfiles"
	mv ~/.gemrc ~/.gemrc.old
	ln -s $DEST/.gemrc ~/.gemrc
fi
if [ ! -e ~/.tmux.conf ]; then
	ln -s $DEST/.tmux.conf ~/.tmux.conf
elif [ ! -L ~/.tmux.conf ]; then
	echo "Replace .tmux.conf for dotfiles"
	mv ~/.tmux.conf ~/.tmux.conf.old
	ln -s $DEST/.tmux.conf ~/.tmux.conf
fi


# Environment of NeoBundle for Vim
if [ ! -e ~/.vim ]; then
   echo "No ~/.vim directory detected."
   mkdir -p ~/.vim/bundle
   echo "~/.vim directory created."
fi
if [ ! -e ~/.vim/bundle/neobundle.vim ]; then
   echo "No 'NeoBundle' for Vim plugin detected."
   echo "Installing NeoBundle..."
   git clone git://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim
   vim +NeoBundleInstall +q
fi


# Git setup
if [ ! -e ~/.config/git/attributes ]; then
	if [ ! -d ~/.config/git ]; then
		mkdir -p ~/.config/git
	fi
	cp -a $SCRIPT_PATH/.config/git/attributes ~/.config/git/attributes
fi
if [ ! -e ~/.gitignore ]; then
	cp -a $SCRIPT_PATH/.config/git/ignore ~/.gitignore
fi
# do git configuration
$SCRIPT_PATH/gitconfig

# Install rbenv
if [ ! -e ~/.rbenv ]; then
	echo "Installing rbenv..."
	git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
	git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
	export PATH="$HOME/.rbenv/bin:$PATH"
	eval $(rbenv init -)
	echo "Install ruby-${SETUP_RUBY_VERSION} ..."
	rbenv install $SETUP_RUBY_VERSION
	rebenv rehash
	rbenv local $SETUP_RUBY_VERSION
	rbenv global $SETUP_RUBY_VERSION
fi

# Install nvm
if [ ! -e ~/.nvm ]; then
	echo "Install nvm..."
	curl https://raw.github.com/creationix/nvm/master/install.sh | sh
	source ~/.nvm/nvm.sh
	echo "Install node-${SETUP_NODE_VERSION} ..."
	nvm install $SETUP_NODE_VERSION
	nvm use $SETUP_NODE_VERSION
	nvm alias default $SETUP_NODE_VERSION
fi

# Install nodebrew
#if [ ! -e ~/.nodebrew ]; then
#	echo "Install nodebrew..."
#	curl https://raw.github.com/hokaccha/nodebrew/master/nodebrew | perl - setup
#	export PATH=$HOME/.nodebrew/current/bin:$PATH
#	echo "Install node-${SETUP_NODE_VERSION} ..."
#	nodebrew install-binary $SETUP_NODE_VERSION
#	nodebrew use $SETUP_NODE_VERSION
#fi



